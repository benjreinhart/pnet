// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var buildPhishNetUrl, config, extend, Path, pnetConfig, request;
  Path = require('path');
  config = require(Path.join(__dirname, '..', 'config'));
  request = require('request');
  extend = require('underscore').extend;
  pnetConfig = config.pnet;
  exports.buildPhishNetUrl = buildPhishNetUrl = function (params) {
    var queryParams;
    if (null == params)
      params = {};
    params = extend(pnetConfig.api.defaults, params);
    queryParams = function (accum$) {
      var key, value;
      for (key in params) {
        if (!isOwn$(params, key))
          continue;
        value = params[key];
        accum$.push('' + key + '=' + value);
      }
      return accum$;
    }.call(this, []).join('&');
    return pnetConfig.api.baseUrl + '?' + queryParams;
  };
  exports.get = function (params, callback) {
    var url;
    url = buildPhishNetUrl(params);
    request.get(url, function (err, response, body) {
      var e, parsed;
      if (null != err) {
        err.url = url;
        return callback(err);
      } else {
        try {
          parsed = JSON.parse(body);
          return callback(null, parsed);
        } catch (e$) {
          e = e$;
          e.url = url;
          return callback(e);
        }
      }
    });
  };
  function isOwn$(o, p) {
    return {}.hasOwnProperty.call(o, p);
  }
}.call(this);
