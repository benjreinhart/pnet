// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var cache$, defaults, extend, fs, method, nopt, omit, options, params, parseColonDelimitedPairs, Path, pnet;
  fs = require('fs');
  Path = require('path');
  nopt = require('nopt');
  defaults = require('./defaults');
  cache$ = require('underscore');
  extend = cache$.extend;
  omit = cache$.omit;
  parseColonDelimitedPairs = function (pairs) {
    if (null == pairs)
      pairs = [];
    return pairs.reduce(function (memo, param) {
      var cache$1, key, value;
      if (param.indexOf(':') !== -1) {
        cache$1 = param.split(':');
        key = cache$1[0];
        value = cache$1[1];
        memo[key] = value;
      }
      return memo;
    }, {});
  };
  options = function () {
    var aliases, opts;
    opts = {
      configure: [
        String,
        Array
      ],
      date: String,
      output: String,
      params: [
        String,
        Array
      ]
    };
    aliases = {
      d: '--date',
      o: '--output',
      p: '--params'
    };
    return nopt(opts, aliases, process.argv, 2);
  }();
  if (options.help) {
    console.log("\n  USAGE: pnet method [options]\n\n  pnet shows.setlists.get -d 2013-10-31 -o ~/setlists/halloween_2013.json\n\n  -d, --date              Specify a `showdate` param to be used in API call.\n                          Shorthand for '-p showdate:YYYY-MM-DD'\n  -o, --output            Output to file instead of STDOUT\n  -p, --params            Specify colon-delimited key value pairs as arguments to\n                          the phish.net API; i.e. '-p venueid:123456 -p year:2012'\n\n  --configure             Specify colon-delimited key value pairs to be used as\n                          defaults for all phish.net API calls through the CLI. i.e.\n                          '--configure apikey=your-api-key --configure api:2.0'\n  --defaults              Print the defaults that have been set via the --configure\n                          flag and exit\n  --help                  Display this message and exit\n  --url-only              Print phish net API url and exit instead of\n                          requesting the resource\n  --version               Print current version of this package and exit\n  ");
    process.exit(0);
  }
  if (options.version) {
    console.log(require(Path.join(__dirname, '..', '..', '..', 'package.json')).version);
    process.exit(0);
  }
  if (options.defaults) {
    console.log(JSON.stringify(defaults.get(), null, 4));
    process.exit(0);
  }
  if (options.configure) {
    defaults.set(parseColonDelimitedPairs(options.configure));
    process.exit(0);
  }
  params = extend(defaults.get(), parseColonDelimitedPairs(options.params));
  method = null != options.argv.remain[0] ? options.argv.remain[0] : params.method;
  params = omit(params, 'method');
  if (options.date)
    params.showdate = options.date;
  pnet = require(Path.join(__dirname, '..', '..'));
  if (options['url-only']) {
    console.log(pnet.urlFor(method, params));
    process.exit(0);
  }
  pnet.get(method, params, function (err, resource) {
    var stringified;
    if (null != err) {
      console.error(null != err.message ? err.message : JSON.stringify(error));
      process.exit(1);
    }
    stringified = JSON.stringify(resource, null, 4);
    if (null != options.output) {
      fs.writeFileSync(options.output, stringified);
    } else {
      console.log(stringified);
    }
    return process.exit(0);
  });
}.call(this);
